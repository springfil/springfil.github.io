//Цикл «while»
// пока "condition" - истинно
// print 1/2/3
let i=1;
while(i<4){
    console.log(i);
    i++;
}
// print 3 2 1
let j = 3;
while(j){ // j!=0
    console.log(j);
    j--;
}



// Цикл «do…while»
// для выполнения тела цикла хотя бы один раз
let a = 0;
do {
  console.log( a );
  a++;
} while (a < 3);



//Цикл «for»

// конструкция
//начало	let i = 0	Выполняется один раз при входе в цикл
//условие	i < 3	Проверяется перед каждой итерацией цикла. Если оно вычислится в false, цикл остановится.
//тело	alert(i)	Выполняется снова и снова, пока условие вычисляется в true.
//шаг	i++	Выполняется после тела цикла на каждой итерации перед проверкой условия.

//алгоритм выполнения
//Выполнить начало
//→ (Если условие == true → Выполнить тело, Выполнить шаг)
//→ (Если условие == true → Выполнить тело, Выполнить шаг)
//→ (Если условие == true → Выполнить тело, Выполнить шаг)
//→ ...

// в примере "ВСТРОЕННОЕ" обьявление переменной i
// но можно let i = 0 for(i=0 ...)


//Прерывание цикла: «break»
//до того как условие вычислится в false можно юзать эту директиву
let sum = 0;

while (true) {

  let value = +prompt("Введите число", '');

  if (!value) break; // (*)

  sum += value;

}
alert( 'Сумма: ' + sum ); // передает управление за {}


//Переход к следующей итерации: continue
// пока условие true - переход к след.итерации
for (let i = 0; i < 10; i++) {

    // если true, пропустить оставшуюся часть тела цикла
    if (i % 2 == 0) continue;
  
    alert(i); // 1, затем 3, 5, 7, 9
  }
// позволяет избежать вложенности
// не юзать break/continue с тернарным ?
// не прыгает к метке ниже  