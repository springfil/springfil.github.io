//Тип данных Symbol

//Создаются новые символы с помощью функции Symbol():
let id = Symbol();
// Создаём символ id с описанием (именем) "id"
let id = Symbol("id");

//Описание – это просто метка, которая ни на что не влияет.
let id1 = Symbol("id");
let id2 = Symbol("id");
alert(id1 == id2);
// Если же мы действительно хотим вывести символ с помощью alert, 
// то необходимо явно преобразовать его с помощью метода .toString(), вот так:
let id = Symbol("id");
alert(id.toString()); // Symbol(id), теперь работает
// Или мы можем обратиться к свойству symbol.description, чтобы вывести только описание:
let id = Symbol("id");
alert(id.description); // id


// «Скрытые» свойства - нельзя случайно обратиться из другой подпрограммы

//Символы игнорируются циклом for…in
//Object.assign, в отличие от цикла for..in, копирует и строковые, и символьные свойства:

// как обратиться - obj[Symbol]


//Symbol.for(key) - Зачем?
//читаем символ из глобального реестра и записываем его в переменную
//Если вам нужен символ, доступный везде в коде – используйте глобальные символы.

// Чтобы вернуть description для глобального символа Symbol.keyFor(sym)